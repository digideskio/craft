var speakers = [
	{
		anchor: "AdewaleOshineye",
		name: "Adewale Oshineye",
		photo: "/img/2015/speakers/AdewaleOshineye.png",
		bio: "<p>I'm a Staff Developer Advocate and Tech Lead Manager in Google's London office.<br><br>That means I help developers and companies build the best possible integrations with the Google platform. It also means I help them tell better stories about their products by using our products. That involves spending a lot of time at the seams where our different products meet then using this knowledge to move the Google platform forwards by improving the quality of the <a href=\"http://blog.oshineye.com/2011/05/what-is-devexp.html\">developer experience</a> we offer.<br><br>Over the last decade I've worked on trading systems for a variety of investment banks as well as on Google's advertising and mobile search systems. I'm also the co-author of <a href=\"http://www.amazon.com/Apprenticeship-Patterns-Guidance-Aspiring-Craftsman/dp/0596518382\">Apprenticeship Patterns</a>: a book that teaches you how to learn to be a great programmer.</p>",
		company: "Google",
		link: {
			href: "http://twitter.com/ade_oshineye",
			text: "@ade_oshineye"
		},
		presentation: {
			title: "Why is an API like a puppy?",
			description: "The idea is to help people learn to think about technical decisions in the context of the long-term consequences. I'll walk people through all the usual reasons why we think APIs are beneficial and show the consequences. I'll conclude by arguing that maturity involves being willing to support and maintain the things/decisions we make."
		}
	},
	{
		anchor: "AdrianTrenaman",
		name: "Adrian Trenaman",
		photo: "/img/2015/speakers/AdrianTrenaman.png",
		bio: "<p>Adrian Trenaman, VP Engineering, Gilt<br><br>Ade is an experienced, outspoken software engineer, communicator and leader with more than 20 years of experience working with technology teams throughout Europe, US and Asia in diverse industries such as financial services, telecom, retail, and manufacturing. He specializes in high-performance middleware, messaging and application development, and is pragmatic, hard-working, collaborative and results-oriented. In the past, he has held the positions of CTO of Gilt Japan, Tech Lead at Gilt Groupe Ireland,  Distinguished Consultant at FuseSource, Progress Software and IONA Technologies, and Lecturer at the National University of Ireland in Maynooth. He became a committer for the Apache Software Foundation in 2010, has acted as an expert reviewer to the European Commission, and has spoken at numerous Tech events.<br><br>Ade holds a Ph.D, Computer Science from the National University of Ireland, Maynooth, a Diploma in Business Development from the Irish Management Institute, and a BA (Mod. Hons) Computer Science from Trinity College, Dublin.</p>",
		company: "Gilt",
		link: {
			href: "http://twitter.com/adrian_trenaman",
			text: "@adrian_trenaman"
		},
		presentation: {
			title: "Scaling Micro-Services at Gilt",
			description: "The ecommerce company Gilt.com (founded 2007) started out as a monolithic Rails application built and maintained by just a handful of engineers. Gilt has since become a global e-commerce destination built upon a sophisticated Scala/Java micro-services architecture strong enough to handle the company’s intense traffic spikes--generated by millions of the company’s members simultaneously visiting the site at noon each day. The concept of micro-services--smaller, lighter, faster components delivered swiftly to production--has resolved many of the growing pains we experienced evolving from “just a handful of engineers” into an engineering team of +100. However, microservices bring their own set of tradeoffs.<br><br>In this talk I'll discuss the evolution of Gilt's micro-service architecture, and the challenges we now face today. How do you move a large Micro-Service deployment to the cloud? How does micro-services affect ownership and software quality? Why do API’s really matter? How can the micro-service approach applied to front-end web applications? And, why has our adoption of micro-services lead us to the conclusion that all our teams should prefer to deploy and test software in production?"
		}
	},
	{
		anchor: "AlexanderReelsen",
		name: "Alexander Reelsen",
		photo: "/img/2015/speakers/AlexanderReelsen.png",
		bio: "<p>Alexander Reelsen is an Elasticsearch developer, who is interested in all things search & scale. Having done web development on the JVM for a couple of years, he decided it is time to switch to something new and has been working on Elasticsearch for quite some time now. Besides that, he loves basketball and enjoys either watching or playing whenever possible.</p>",
		company: "Elasticsearch",
		link: {
			href: "http://twitter.com/spinscale",
			text: "@spinscale"
		},
		presentation: {
			title: "Speed is Key: Elasticsearch under the Hood",
			description: "This talk moves beyond the standard introduction into Elasticsearch and focuses on how Elasticsearch tries to fulfill its near-realtime contract. Specifically, I’ll show how Elasticsearch manages to be incredibly fast while handling huge amounts of data. After a quick introduction, we will walk through several search features and how the user can get the most out of Elasticsearch.<br><br>This talk will go under the hood exploring features like search, aggregations, highlighting, (non-)use of probabilistic data structures and more.",
		}
	},
	{
		anchor: "AlvaroVidela",
		name: "Alvaro Videla",
		photo: "/img/2015/speakers/AlvaroVidela.png",
		bio: "<p>Alvaro Videla works as Developer Advocate for RabbitMQ/Pivotal. Before moving to Europe he used to work in Shanghai where he helped building one of Germany's biggest dating websites. He co-authored the book \"RabbitMQ in Action\" for Manning Publishing. Some of his open source projects can be found here: <a href=\"http://github.com/videlalvaro\">http://github.com/videlalvaro.</a> Apart from code related stuff he likes traveling with his wife, listening/playing music and reading books. You can find him on Twitter as @old_sound.</p>",
		company: "Pivotal",
		link: {
			href: "http://twitter.com/old_sound",
			text: "@old_sound"
		},
		presentation: {
			title: "Writing testable code - A functional programming point of view",
			description: "We've been told many times that we should write unit tests for our code. We have read the theory and we have applied automatic testing to our projects, sometimes successfully but often times not so.<br><br>Why it seems to be so hard to test our code? However we look at it, automatic testing doesn't work like a \"plug & play\" peripheral. It just doesn't seem to fit with our project. A dependency is missing here; we have a hard to mock object there; and so on. <br><br>What is _that_ thing we might be doing wrong but we fail to notice?<br><br>In this talk we will argue that the problem lays in our code, in its structure, in the way we pass data around and even how we write for loops!<br><br>This won't be your everyday \"code quality\" tech talk, since we are going to attack the problem of code quality from different points of view and paradigms like Functional Programming and the Unix philosophy of simplicity and reuse.",
		}
	},
	{
		anchor: "AmberCase",
		name: "Amber Case",
		photo: "/img/2015/speakers/AmberCase.png",
		bio: "<p>Amber Case is a researcher exploring the field of cyborg anthropology. Amber is also the director of the <a href=\"http://www.esri.com\">Esri</a> R&D Center in lovely Portland, Oregon. Her work there started when Esri acquired <a href=\"https://geoloqi.com/\">Geoloqi</a>, her startup that provided location functionality for mobile apps. Amber is a captivating presence when she’s geeking out about the interaction between humans and technology, hence her barnstorming appearances at TED and South by Southwest. Right now, her work involves non-visual augmented reality, the future of location, and reducing the amount of time and space it takes for people to connect. Her home on the web is <a href=\"http://caseorganic.com/\">caseorganic.com</a>.</p>",
		company: "Esri",
		link: {
			href: "http://twitter.com/caseorganic",
			text: "@caseorganic"
		},
		presentation: {
			title: "Designing Calm Technology",
			description: "Our world is made of information that competes for our attention. What is needed? What is not? We cannot interact with our everyday life in the same way we interact with a desktop computer. The terms calm computing and calm technology were coined in 1995 by PARC Researchers Mark Weiser and John Seely Brown in reaction to the increasing complexities that information technologies were creating. Calm technology describes a state of technological maturity where a user’s primary task is not computing, but being human. The idea behind Calm Technology is to have smarter people, not things. Technology shouldn’t require all of our attention, just some of it, and only when necessary.<br><br>How can our devices take advantage of location, proximity and haptics to help improve our lives instead of get in the way? How can designers can make apps “ambient” while respecting privacy and security? This talk will cover how to use principles of Calm Technology to design the next generation of connected devices. We’ll look at notification styles, compressing information into other senses, and designing for the least amount of cognitive overhead.<br><br>Tags: internet of things, product design, calm computing<br>Audience Level: Intermediate<br>Prerequisite Knowledge for this Session: This session is for a wide range of professionals. Engineering directors, investors, consumers, designers and developers are the main focus of this section. This session is relevant for anyone that actively builds or makes decisions about technology."
		}
	},
	{
		anchor: "BrianBulkowski",
		name: "Brian Bulkowski",
		photo: "/img/2015/speakers/BrianBulkowski.png",
		bio: "<p>Brian is a founder of Aerospike, CTO & Product, networking whiz, innovator and high performance expert. ‘My family has a long and varied history in science and tech, so I wound up shipping code in high school. One of the great things about software is you can build something with it. You don’t need plywood or welding. Computers are an easy way to start creating stuff. My first taste of networking was in 1989. I knew there was a whole world out there waiting. A computer that’s not connected to a network is kind of dull.’<br><br>Brian became a Lead Engineer at Novell, and then Chief Architect of Cable Solutions at Liberate – where he built a high-performance, embedded networking stack, as well as the high scale broadcast server infrastructure. As Director of Performance at Aggregate Knowledge, Brian had direct experience with the scaling limitations of sharded MySQL systems. ‘It wasn’t hard to see that there was a huge need for a new distributed database, because they all sucked. Everyone was struggling with what was available. That led to the idea for Citrusleaf – which then became Aerospike.’<br><br>When he’s not busy creating stuff without plywood or a welding torch, Brian plays cello in a band called Rosincoven. He also writes about cuisine for the San Jose Metro.</p>",
		company: "Aerospike",
		link: {
			href: "http://twitter.com/bbulkow",
			text: "@bbulkow"
		},
		presentation: {
			title: "NoSQL Key Value Stores - the Key to Velocity",
			description: "The growth in interactive Internet and mobile applications is driving a new data challenge—velocity—where real-time responses are based on insights extracted from volumes of big data. In this 10-minute talk, Brian Bulkowski, Aerospike founder & CTO, will list 10 reasons why in-memory and a new generation of distributed databases, NoSQL key-value stores, are the killer data solution for achieving velocity within every enterprise. He will look at the democratizing effect of open source in-memory NoSQL key-value stores that can achieve 1 million transactions per second, whether running on a single $5,000 server or on a single Amazon instance at a cost of $1.68 per hour. Additionally, he will share real-world examples of companies using these data technologies to scale from startups to industry leaders, including AppNexus, which was founded in 2007, recently earned a $1.2 billion valuation, and now manages 90 billion ad impressions per day.",
		}
	},
	{
		anchor: "BruceEckel",
		name: "Bruce Eckel",
		photo: "/img/2015/speakers/BruceEckel.png",
		bio: "<p>Bruce Eckel (<a href=\"http://www.bruceeckel.com\">www.BruceEckel.com</a>) is the author (with Dianne Marsh) of <a href=\"http://www.atomicscala.com/\">Atomic Scala</a>, Thinking in Java (Prentice-Hall, 1998, 2nd Edition, 2000, 3rd Edition, 2003, 4th Edition, 2006), the Hands-On Java eSeminar (available on the Web site), Thinking in C++ (PH 1995; 2nd edition 2000, Volume 2 with Chuck Allison, 2003), C++ Inside & Out (Osborne/McGraw-Hill 1993), and First Steps in Flex (with James Ward, 2008) among others. He's given hundreds of presentations throughout the world, published over 150 articles in numerous magazines, was a founding member of the ANSI/ISO C++ committee and speaks regularly at conferences. He was for many years the chair of both the C++ and Java tracks at the Software Development conference, is cofounder of the JavaPosse Roundup Conference and creator of the Scala Summit Conference. He provides public and private training and consulting in programming languages and software system design.</p>",
		company: "MindView",
		link: {
			href: "http://twitter.com/BruceEckel",
			text: "@BruceEckel"
		},
		presentation: {
			title: "The Next Big Challenge: Getting Better Ideas",
			description: "First came tools: programming languages, version control, testing, build automation and eventually continuous delivery. Somewhere along the tools curve, we began seeing that our process wasn't working and that we needed shorter, faster experimentation with better feedback cycles and communication, which produced Agile. Now that we have much better tools and processes (both of which continue to improve), what is the next big step in the evolution of software development, and development in general? Now that we've gotten pretty good at building things, I believe we need to get better at discovering good things to build. After a brief history of tools and processes, I will look at this need and explore how we must change our perspectives to address our next big challenge."
		}
	},
	{
		anchor: "CamilleFournier",
		name: "Camille Fournier",
		photo: "/img/2015/speakers/CamilleFournier.png",
		bio: "<p>Camille is the head of engineering at Rent the Runway. In her limited spare time, she hacks on distributed systems for the Apache ZooKeeper project and contributes to the Dropwizard Java web framework.</p>",
		company: "Rent the Runway",
		link: {
			href: "http://twitter.com/skamille",
			text: "@skamille"
		},
		presentation: {
			title: "ZooKeeper for the Skeptical Architect",
		}
	},
	{
		anchor: "CaitieMcCaffrey",
		name: "Caitie McCaffrey",
		photo: "/img/2015/speakers/CaitieMcCaffrey.png",
		bio: "<p>Caitie McCaffrey is a Backend Brat, Distributed Systems Diva, and Tech Lover. Her focus is on Web Services, Distributed Systems, and Big Data. She spent the first 6 years of her career building services that power the entertainment industry, including video games (Gears of War 2, Gears of War 3, & Halo 4) and the HBO Go Services. Caitie has a degree in Computer Science from Cornell University. She maintains a blog at <a href=\"http://caitiem.com/\">CaitieM.com</a> and frequently discusses technology and entertainment on Twitter <a href=\"http://twitter.com/caitie\">@caitie</a>.</p>",
		company: "Twitter",
		link: {
			href: "http://twitter.com/caitie",
			text: "@caitie"
		},
		presentation: {
			title: "Implementing the Saga Pattern",
			description: "As we build larger more complex applications and solutions that need to do collaborative processing the traditional ACID transaction model using coordinated 2-phase commit is often no longer suitable. More frequently we have long lived transactions or must act upon resources distributed across various locations and trust boundaries. The Saga Pattern is a useful model for long lived activities and distributed transactions without coordination.<br><br>Sagas split work into a set of transactions whose effects can be reversed even after the work has been performed or committed. If a failure occurs compensating transactions are performed to rollback the work. So at its core the Saga is a failure Management Pattern, making it particularly applicable to distributed systems.<br><br>The Halo 4 Statistics service processed over 1.5 billion games played by 11.6 million unique players. Each game had 1-32 players in it, and their records were distributed across multiple storage partitions. In addition the Halo 4 Services could not block on processing statistics because of the high availability & low latency requirements imposed on us by the game. In order to meet these requirements we implemented the Saga Pattern in Halo 4 Services to process game statistics.<br><br>In this talk, I'll discuss the fundamentals of the Saga Pattern, and how it can be applied to your systems. In addition we'll discuss how the Halo 4 Services successfully made use of the Saga Pattern when processing game statistics, and how we implemented it in production.",
		}
	},
	{
		anchor: "CoreyHaines",
		name: "Corey Haines",
		photo: "/img/2015/speakers/CoreyHaines.png",
		bio: "<p>Corey loves to code. He also loves to speak. This is an opportunity to mix these two passions. Best known for his journeyman tour and co-founding the <a href=\"http://coderetreat.org/\">coderetreat community</a>, Corey continues to help developers discover ways to continue on the path of awesome development. Lately, he has been focused on effective, maintainable design through a better understanding of the fundamentals of writing code. He is the author of the book, <a href=\"https://leanpub.com/4rulesofsimpledesign\">Understanding the 4 Rules of Simple Design</a>, and an upcoming book on The Lambda Calculus.</p>",
		company: "CoreyHaines, LLC",
		link: {
			href: "http://twitter.com/coreyhaines",
			text: "@coreyhaines"
		},
		presentation: {
		}
	},
	{
		anchor: "DanNorth",
		name: "Dan North",
		photo: "/img/2015/speakers/DanNorth.png",
		bio: "<p>Programmer and organizational change specialist Dan North applies principles from lean operations and agile software development to help organizations align their technology capabilities with their business objectives. With over twenty years of experience in IT, Dan is a frequent speaker at technology conferences worldwide, has published feature articles in numerous software and business publications, and contributed to The RSpec Book: Behaviour Driven Development with RSpec, Cucumber, and Friends and 97 Things Every Programmer Should Know: Collective Wisdom from the Experts. The originator of Behaviour-Driven Development (BDD) and Deliberate Discovery, Dan is currently working on his book, Accelerated Agile – from months to minutes, and helping organizations radically improve their delivery. He blogs at <a href=\"http://dannorth.net/blog\">http://dannorth.net/blog</a>.</p>",
		company: "Dan North & Associates",
		link: {
			href: "http://twitter.com/tastapod",
			text: "@tastapod"
		},
		presentation: {
		}
	},
	{
		anchor: "DaveHoover",
		name: "Dave Hoover",
		photo: "/img/2015/speakers/DaveHoover.png",
		bio: "<p>Dave is on a mission to help more businesses become skill producers instead of passive, skill consumers. His first exposure to a skill-producing business was during his time at Thoughtworks (2004-2006), where he experienced their world-class learning culture. He took what he learned there to Obtiva (2006-2012), where he started and led a successful apprenticeship program. In 2009, \“Apprenticeship Patterns\” was published by O’Reilly, a book Dave had been co-authoring with Adewale Oshineye since 2005. In 2012, Dave joined Dev Bootcamp, and led the launch of their Chicago location in 2013. Dave is now working with companies in the Dev Bootcamp Employer Network, helping them start apprenticeship programs, and improve their ability to incorporate newcomers.</p>",
		company: "Dev Bootcamp",
		link: {
			href: "http://twitter.com/davehoover",
			text: "@davehoover"
		},
		presentation: {
		}
	},
	{
		anchor: "DavidNolen",
		name: "David Nolen",
		photo: "/img/2015/speakers/DavidNolen.png",
		bio: "<p>David Nolen is a software engineer for Cognitect. He enjoys making music, writing JavaScript, writing ClojureScript, and exploring new approaches to user interface programming.</p>",
		company: "Cognitect",
		link: {
			href: "http://twitter.com/swannodette",
			text: "@swannodette"
		},
		presentation: {
		}
	},
	{
		anchor: "DeepakNadig",
		name: "Deepak Nadig",
		photo: "/img/2015/speakers/DeepakNadig.png",
		bio: "<p>Deepak Nadig is the Head of API Platform Engineering at PayPal, and responsible for leading and transforming PayPal APIs used internally and externally to process $100 Billions of payments. Prior to PayPal, Deepak Nadig led eBay’s Enterprise Architecture organization, which oversees eBay’s Application, Technology and Data Architecture. And as an eBay Distinguished Architect, Deepak led the transformation of eBay’s advertising, analytics, experimentation and web services platforms. Before eBay, Deepak co-founded Covigna, a pioneer in contract lifecycle management, and has held senior technology roles at HP and VeriFone. Deepak is a frequent speaker at conferences and is passionate about the use of technology in transforming businesses.</p>",
		company: "PayPal",
		link: {
			href: "http://twitter.com/deepak_nadig",
			text: "@deepak_nadig"
		},
		presentation: {
			title: "Evolution of the PayPal API: Platform & Culture",
		}
	},
	{
		anchor: "EmilyBache",
		name: "Emily Bache",
		photo: "/img/2015/speakers/EmilyBache.png",
		bio: "<p>Emily Bache is a software developer and automated testing specialist. She currently works for Pagero in a development team, and part-time at her own company, Bache Consulting. She enjoys the combination of daily programming, using tools such as Scala, Python, TextTest and Docker, with occasional training and consulting engagements. Emily is the author of <a href=\"https://leanpub.com/codingdojohandbook\">The Coding Dojo Handbook: a practical guide to creating a space where good programmers can become great programmers</a> and loves to coach and teach developers about Clean Code, Test Driven Development, Refactoring, and more. Emily speaks regularly at international events such as Agile Testing Days, XP2014, ACCU, and recently gave a keynote address at Europython in Berlin.</p>",
		company: "Pagero",
		link: {
			href: "http://twitter.com/emilybache",
			text: "@emilybache"
		},
		presentation: {
			title: "As a Professional Programmer, how do you learn new skills?",
			description: "In my experience, there are some skills that are hard to learn as a professional programmer. You learn a lot on the job, via trial and error, and coaching from your peers. Occasionally you go on a training course and learn the basics of a new framework or language. Neither of those ways is particularly effective when it comes to a skill like Test Driven Development.<br><br>There are several reasons for this. It’s hard to change the habits of a whole career in a two day class. Then when you get back to work you discover your system is not designed with testability in mind, and adding tests later is really difficult. Alternatively you may find yourself working on some kind of greenfield development where it should be easier. The trouble is you find writing tests slows you down so much, you have to abandon them as deadlines loom. In the best case, adding tests afterwards becomes the norm, and in the worst case they are not written at all.<br><br>I've found that having a regular forum for learning, called a \"coding dojo\", can make all the difference to professionals who want to learn skills like Test Driven Development.<br><br>When you step into the coding dojo, you leave your daily coding environment, with all the associated complexities and problems, and enter a safe environment where you can trystuff out, make mistakes and learn with others. It's a breathing space where the focus is not on delivering solutions, but rather on being aware of what you actually do when you produce code, and how to improve that process. The benefits multiply if you can arrange to bring your whole team with you into the dojo. Through discussion and practicing on exercises, you can make a lasting impact on the way you work together.<br><br>In this talk I'd like to explain what a coding dojo is, and why you might be interested to take part in one."
		}
	},
	{
		anchor: "ErikMeijer",
		name: "Erik Meijer",
		photo: "/img/2015/speakers/ErikMeijer.png",
		bio: "<p>Erik Meijer is an accomplished programming-language designer who has worked on a wide range of languages, including Haskell, Mondrian, X#, Cω, C#, and Visual Basic. He runs the Cloud Programmability Team at Microsoft, where his primary focus has been to remove the impedance mismatch between databases and programming languages. One of the fruits of these efforts is LINQ, which not only adds a native querying syntax to .NET languages, such as C# and Visual Basic, but also allows developers to query data sources other than tables, such as objects or XML. Most recently, Erik has been working on democratizing the Cloud using Volta and preaching the virtues of fundamentalist functional programming in the new age of concurrency and many-core. Some people might recognize him from his brief stint as the \"Head in the Box\" on Microsoft VBTV.</p>",
		company: "Applied Duality Incorporated",
		link: {
			href: "http://twitter.com/headinthebox",
			text: "@headinthebox"
		},
		presentation: {
		}
	},
	{
		anchor: "FlavioPercoco",
		name: "Flavio Percoco",
		photo: "/img/2015/speakers/FlavioPercoco.png",
		bio: "<p>Flavio spends most of his time hacking on storage and messaging modules. He has both Italian and Venezuelan roots, and is currently based in Italy where he works remotely for Red Hat. Flavio is also an actively open-source contributor, part of Mongodb Masters group and an active Rust lang contributor.<br><br>Prior to Red Hat, Flavio worked on Big Data oriented applications, search engines and message systems. He was also an active member of Gnome's a11y team where he contributed to Orca and created MouseTrap, a head-tracker application. Outside Red Hat Flavio likes to take pictures, swim, travel, hang around with family and friends and whatever seems interesting.</p>",
		company: "Red Hat",
		link: {
			href: "http://twitter.com/flaper87",
			text: "@flaper87"
		},
		presentation: {
			title: "IaaS beyond the Infrastructure",
			description: "We've been talking about Infrastructure providers for quite a bit already. OpenStack itself started as such - an IaaS - and then it quickly became a cloud provider, welcoming a whole lot of new projects with goals that go way beyond infrastructure. But what does that mean? What is a cloud provider suppose to provide? What's cloud after all? Is there a minimum set of tools required?<br><br>Scaling a distributed system goes beyond virtualization, shared storage, etc. In order to support on-demand scaling it is necessary to have an easy way to provision and consume the available infrastructure, a way for the services running in it to communicate, etc. Not to mention latency needs, reliability, etc.<br><br>This talk aims to answer the above questions and take a step further down the path of explaining what should be considered essential for nowadays needs, especially when those needs require a `cloud` to be covered."
		}
	},
	{
		anchor: "GradyBooch",
		name: "Grady Booch",
		photo: "/img/2015/speakers/GradyBooch.png",
		bio: "<p>Grady Booch is internationally recognized for his innovative work in software architecture, software engineering, and modeling, and is perhaps best known for developing the Unified Modeling Language (UML) with Ivar Jacobson and James Rumbaugh and helping originate the term and practice of object-oriented programming and design. Grady is an IBM Fellow, an ACM Fellow, an IEEE Fellow, a World Technology Network Fellow, aSoftware Development Forum Visionary, and a recipient of Dr. Dobb's Excellence in Programming award plus three Jolt Awards. Grady was a founding board member of the Agile Alliance, the Hillside Group, and the Worldwide Institute of Software Architects, and now also serves on the advisory board of the International Association of Software Architects. He is also a member of the IEEE Softwareeditorial board. Additionally, Grady serves on the board of the Computer History Museum, where he helped establish work for the preservation of classic software and therein has conducted several oral histories for luminaries such as John Backus, Fred Brooks, and Linus Torvalds. He previously served on the board of the Iliff School of Theology.</p>",
		company: "IBM",
		link: {
			href: "http://twitter.com/grady_booch",
			text: "@grady_booch"
		},
		presentation: {
			title: "The Ethical Developer",
			description: "We build the software-intensive systems that run the world. Computing has woven its way into every space of society and science, and we - as individuals, organizations, and governments - have slowly surrendered to these human-made creations. As professional developers, we care about our craft: we all want to build great software that makes a difference. And yet, it's not just about technical excellence. That's important, certainly, but it's also about ethical development, development done with a reasonable consideration of the human as well as the technical forces that weigh upon the artifacts we create and the way we create them. My premise is that every line of code we write has an ethical and moral dimension, and in this presentation, we'll examine the implications of that point of view."
		}
	},
	{
		anchor: "InesSombra",
		name: "Ines Sombra",
		photo: "/img/2015/speakers/InesSombra.png",
		bio: "<p>Ines Sombra is a Distributed Systems Engineer at Fastly, where she spends her time helping the Web go faster. Ines holds an M.S. in Computer Science and an M.S. in Information Management from Washington University in Saint Louis. Being a true Argentine, she has a fondness for steak, fernet, and a pug named Gordo. Follow Ines <a href=\"http://twitter.com/randommood\">@randommood</a></p>",
		company: "Fastly",
		link: {
			href: "http://twitter.com/randommood",
			text: "@randommood"
		},
		presentation: {
			title: "CI antipatterns / What makes a good CI system",
		}
	},
	{
		anchor: "JasonGorman",
		name: "Jason Gorman",
		photo: "/img/2015/speakers/JasonGorman.png",
		bio: "<p>Jason Gorman is a software development practitioner, trainer, coach and author based in London with two decades’ experience working with teams in a wide range of industries. He founded Codemanship Ltd in 2009.<br>Jason has worked with teams at the BBC, City Index, Electronic Arts, Higher Education Statistics Agency, BUPA, British Standards Institute, The Post Office, Merrill Lynch HSBC, Freshfields Bruckhaus Deringer, Orange, Lloyds TSB, AOL, Reed Business Information and Symbian, any many more.<br>Jason chairs the <a href=\"http://www.softwarecraftsmanship.org.uk/\">Software Craftsmanship</a> conference in the UK, and is a contributor to other conferences including QCon, Software Practice Advancement, XPDay, Agile Finland, JAX London and CITCON Europe.<br>His web site, <a href=\"http://www.softwarecraftsmanship.org.uk/\">parlezuml.com</a>, has been visited by more than a million software professionals since 2003, and his free tutorials on use cases, UML, OO design and Test-driven Development have had more than 500,000 downloads.</p>",
		company: "Codemanship Ltd.",
		link: {
			href: "http://twitter.com/jasongorman",
			text: "@jasongorman"
		},
		presentation: {
			title: "Continuous Inspection",
			description: "A critically overlooked aspect of Continuous Delivery is the need to maintain the internal quality of our software to enable us to sustain the pace of innovation. Experience teaches us that Continuous Delivery is not sustainable without Clean Code.<br><br>Traditional Agile approaches to maintaining code quality, like Pair Programming, have shown themselves to fall short of the level of rigour teams need to apply. While we place great emphasis on automated testing to ensure functional quality, we fall back on ad hoc and highly subjective approaches for non-functional quality, with predictable results.<br><br>Just as with functional bugs, code quality \"bugs\" are best caught early, and for this we find we need some kind of Continuous Testing approach to raise the alarm as soon after code smells are introduced as possible.<br><br>Continuous Inspection is the missing discipline in Continuous Delivery. It is essentially continuous non-functional testing of our code to ensure that we will be able to change it later.<br><br>In this tutorial, participants will learn how to implement Continuous Inspection using readily available off-the-shelf tools like Checkstyle, Simian, Emma, Java/NDepend and Sonar, as well as rigging up our own bespoke code quality tests using more advanced techniques with reflection and parser generators like ANTLR.<br><br>They will also learn about key Continuous Inspection practices that can be used to more effectively manage the process and deliver more valuable results, like Non-functional Stories, Clean Code Check-ins, Build Inspections and Rising Tides (a practice that can be applied to incrementally improving the maintainability of legacy code.)",
		}
	},
	{
		anchor: "JeffLindsay",
		name: "Jeff Lindsay",
		photo: "/img/2015/speakers/JeffLindsay.png",
		bio: "<p>Jeff Lindsay is the author of Dokku and many Docker related open source projects. He is the co-founder and principal of Glider Labs, a devops consultancy specializing in modern, Docker-oriented system architectures. Jeff was involved in the early stages of Docker development, and has worked with many other organizations such as Twilio, Digital Ocean, and NASA Ames on distributed systems and developer platforms.</p>",
		company: "Glider Labs",
		link: {
			href: "http://twitter.com/progrium",
			text: "@progrium"
		},
		presentation: {
		}
	},
	{
		anchor: "JeremyEdberg",
		name: "Jeremy Edberg",
		photo: "/img/2015/speakers/JeremyEdberg.png",
		bio: "<p>Jeremy is currently the Reliability Architect for Netflix, the largest video streaming service in the world. Before that he ran reddit, an online community for sharing and discussing interesting things on the internet that does more than four billion pageviews a month. Both run their entire operations on Amazon's EC2. Jeremy has keynoted at conferences such as PyCon and Cloud Connect, and holds a cognitive Science degree from UC Berkeley.</p>",
		company: "Netflix",
		link: {
			href: "http://twitter.com/jedberg",
			text: "@jedberg"
		},
		presentation: {
		}
	},
	{
		anchor: "JessicaKerr",
		name: "Jessica Kerr",
		photo: "/img/2015/speakers/JessicaKerr.png",
		bio: "<p>Jessica Kerr \"speaks with the authority of an experienced software engineer and the infectious enthusiasm of a 10-year-old telling you about magic.\" After ten years in Java she discovered the big wider world of programming through F# and Scala. She speaks about functional programming, git, property-based testing, and juggling complexity. In between conferences, she juggles two daughters and full-time remote pairing in Clojure for Outpace Systems. Find her <a href=\"http://twitter.com/jessitron\">@jessitron</a> or <a href=\"http://blog.jessitron.com\">blog.jessitron.com</a>.</p>",
		company: "Outpace",
		link: {
			href: "http://twitter.com/jessitron",
			text: "@jessitron"
		},
		presentation: {
		}
	},
	{
		anchor: "JohnWillis",
		name: "John Willis",
		photo: "/img/2015/speakers/JohnWillis.png",
		bio: "<p>John Willis has worked in the IT management industry for more than 30 years, and he is currently the VP of Customer Enablement for Stateless Networks. Prior to joining Enstratius, Willis was the VP of Solutions for DTO Solutions where he led the transition to a new suite of automated infrastructure and DevOps solutions. Prior to DTO Solutions. Willis was the VP of Training & Services at Opscode where he formalized the training, evangelism, and professional services functions at the firm. Willis also founded Gulf Breeze Software, an award winning IBM business partner, which specializes in deploying Tivoli technology for the enterprise. Willis has authored six IBM Redbooks for IBM on enterprise systems management and was the founder and chief architect at Chain Bridge Systems.</p>",
		company: "Stateless Networks",
		link: {
			href: "http://twitter.com/botchagalupe",
			text: "@botchagalupe"
		},
		presentation: {
			title: "Devops Blind Spots",
		}
	},
	{
		anchor: "JoshLong",
		name: "Josh Long",
		photo: "/img/2015/speakers/JoshLong.jpg",
		bio: "<p>Josh Long <a href=\"http://twitter.com/starbuxman\">@starbuxman</a> is the Spring developer advocate at Pivotal. He <a href=\"https://github.com/joshlong\">is a contributor</a> to many open-source projects (including various Spring projects), an author on 5 books on Spring (for Apress and O'Reilly), has delivered 3 very popular Livelessons videos, and spoken at hundreds of software conferences and events worldwide.</p>",
		company: "Pivotal",
		link: {
			href: "http://twitter.com/starbuxman",
			text: "@starbuxman"
		},
		presentation: {
			title: "Building \"Bootiful\" Microservices with Spring Cloud",
			description: "It's 2015. Most of us get the various motivations behind microservices. We want to be truly agile, and ship every iteration. We want our software to map to our organization. We want independent deployability. We want small, two pizza-box teams that control their own technological destiny, choosing the best tools for their focused job. We want polyglot, language-agnostic services and well-defined module boundaries. Decomposing applications into a set of microservices delivers all of this and more, but introduces additional complexity intrinsic intrinsic in the interactions <b>between</b> the services.<br><br>Join Spring Developer Advocate Josh Long for at how Spring Cloud, which builds on Spring Boot and the Netflix OSS stack, can eliminate these complexity problems.<br><br>Attendees will emerge having learnt:<ul><li>basic drivers for microservices<li>12-factor app style configuration with the Spring Cloud configuration service<li>service registration and discovery with Spring Cloud and Eureka<li>preventing failure cascades with Spring Cloud and Hystrix and the Hystrix Dashboard<li>building robust edge services or API gateways with Spring Cloud and Zuul<li>client-side load-balancing with Spring Cloud and Ribbon</ul>",
		}
	},
	{
		anchor: "KatherineDaniels",
		name: "Katherine Daniels",
		photo: "/img/2015/speakers/KatherineDaniels.png",
		bio: "<p>Katherine is an operations engineer at Etsy. She got her start in programming with TI-80 calculators back when Geocities was still cool, and these days has opinions on things like ‘the cloud’ and ‘devops’. Before escaping to the world of operations, she spent a few years doing QA and systems engineering in the corporate world. She lives in Brooklyn with a perfectly reasonable number of cats, and in her spare time can often be found rock climbing or making hot sauce.</p>",
		company: "Etsy",
		link: {
			href: "http://twitter.com/beerops",
			text: "@beerops"
		},
		presentation: {
			title: "Devops for Everyone",
			description: "Devops originally started as a way of enabling both developers and operations engineers to work better together, but over the 5 years since its inception it’s become much more than that. The principles of devops can be beneficial to everyone involved in software development, not just two teams. This talk will discuss how the ideas of collaboration, empathy, and automation can be used throughout an organization, things to consider when choosing or developing tools, and how to continue growing a devops culture as your company grows."
		}
	},
	{
		anchor: "KyleKingsbury",
		name: "Kyle Kingsbury",
		photo: "/img/2015/speakers/KyleKingsbury.png",
		bio: "<p>Kyle Kingsbury is the author of Riemann, Jepsen, Knossos, Clojure from the Ground Up, and a bunch of other open-source stuff. He writes Clojure and helps monitor distributed systems at Factual.</p>",
		company: "Factual",
		link: {
			href: "http://twitter.com/aphyr",
			text: "@aphyr"
		},
		presentation: {
			title: "Jepsen IV: Hope Springs Eternal",
			description: "Stateless applications aren't: they rely on other systems storing and transforming shared state correctly. On the basis of documentation and reputation we assume that our clients and database systems comprise a safe, meaningful distributed system. How justified is our faith in that system's correctness? Do popular databases actually provide the safety invariants we assume? Are we using those invariants correctly? I want experimental answers to these questions."
		}
	},
	{
		anchor: "MacDevine",
		name: "Mac Devine",
		photo: "/img/2015/speakers/MacDevine.png",
		bio: "<p>IBM Distinguished Engineer, Vice President of SDN Cloud Services and CTO, IBM Cloud Services Division. ThingsExpo and CloudExpo Faculty. Follow Mac <a href=\"https://twitter.com/mac_devine\">@mac_devine</a></p>",
		company: "IBM",
		link: {
			href: "http://twitter.com/mac_devine",
			text: "@mac_devine"
		},
		presentation: {
		}
	},
	{
		anchor: "MarkBurgess",
		name: "Mark Burgess",
		photo: "/img/2015/speakers/MarkBurgess.png",
		bio: "<p>Mark Burgess is a well known theoretician in the area of information systems, whose work has focused largely on distributed information infrastructure. He is known particularly for his work on Configuration Management and <a href=\"http://www.amazon.com/Promise-Theory-Jan-Bergstra-ebook/dp/B00IAQQ8PM\">Promise Theory</a>. Mark Burgess was CTO, Founder and original author of <a href=\"http://www.cfengine.com/\">Cfengine</a>. He was senior lecturer and then professor of Network and System Administration at Oslo University College from 1994-2011. He was the first professor with this title. Mark obtained a PhD in Theoretical Physics in Newcastle, for which he received the Runcorn Prize. His current research interests include the behaviour of computers as dynamic systems and applying ideas from physics to describe computer behaviour. Mark is the author of the popular configuration management software package Cfengine, and is the founder, chairman and CTO of the Cfengine company. He led theoretical and practical contributions to the theory of automation and policy based management, including the idea of Operator Convergence and Promise Theory. He is the author of numerous books and papers on Network and System Administration and has won several prizes for his work.</p>",
		company: "Cfengine",
		link: {
			href: "http://twitter.com/markburgess_osl",
			text: "@markburgess_osl"
		},
		presentation: {
		}
	},
	{
		anchor: "MartinKleppmann",
		name: "Martin Kleppmann",
		photo: "/img/2015/speakers/MartinKleppmann.png",
		bio: "<p>Martin is a software engineer and entrepreneur, specialising on the data infrastructure of internet companies. His last startup, Rapportive, was acquired by LinkedIn in 2012. He is a committer on Apache Samza and author of the upcoming O'Reilly book \"Designing Data-Intensive Applications\" (<a href=\"http://dataintensive.net\">http://dataintensive.net</a>).</p>",
		company: "Linkedin",
		link: {
			href: "http://twitter.com/martinkl",
			text: "@martinkl"
		},
		presentation: {
			title: "Using logs to build a solid data infrastructure",
			description: "How does your database store data on disk reliably? It uses a log.<br>How does one database replica synchronise with another replica? It uses a log.<br>How does a distributed algorithm like Raft achieve consensus? It uses a log. <br>How does activity data get recorded in a system like Apache Kafka? It uses a log.<br>How will the data infrastructure of your application remain robust at scale? Guess what...<br><br>Logs are everywhere. I'm not talking about plain-text log files (such as syslog or log4j) — I mean an append-only, totally ordered sequence of records. It's a very simple structure, but it's also a bit strange at first if you're used to normal databases. However, once you learn to think in terms of logs, many problems of making large-scale data systems reliable, scalable and maintainable suddenly become much more tractable.<br><br>Drawing from the experience of building scalable systems at LinkedIn and other startups, this talk will explore why logs are such a fine idea: making it easier to maintain search indexes and caches, making your applications more scalable and more robust in the face of failures, and opening up your data for richer analysis, while avoiding race conditions, inconsistencies and other ugly problems."
		}
	},
	{
		anchor: "MartyCagan",
		name: "Marty Cagan",
		photo: "/img/2015/speakers/MartyCagan.png",
		bio: "<p>Marty Cagan is the Founder of the Silicon Valley Product Group, where he works with, and advises many of the leading technology teams in the world. Before founding SVPG to pursue his interests in helping others create successful products through his writing, speaking, investing and advising, Marty was most recently the original SVP of Product and Design for eBay, where he was responsible for creating and building the product and design organizations and defining the products and services for the company’s global e-commerce trading site. Marty began his career working for 10 years as a software developer at HP Labs, and then moved on to join a young Netscape Communications as their VP Platform and Tools. Marty is the author of INSPIRED: How To Create Products Customers Love, and publishes a popular blog for product teams at <a href=\"http://www.svpg.com\">www.svpg.com</a>.</p>",
		company: "Silicon Valley Product Group",
		link: {
			href: "http://twitter.com/cagan",
			text: "@cagan"
		},
		presentation: {
			title: "Great Engineering, Failed Product",
			description: "Maybe the single biggest problem I see among technology product teams is strong engineering capability, that ends up all for naught because the product fails.  Of course there are any number of reasons for failed products.  It could be the market.  It could be the business model.  It could be the user experience.  Yes, it could also be the engineering, although in my experience that is rarely the cause other than the cumulative impact of technical debt.  But each of these issues can be traced back to the product team.  Everything depends on having a strong product team.  Unfortunately, relatively few engineers have even had the opportunity to see a truly strong product team in action.  If you read <a href=\"http://www.svpg.com/good-product-team-bad-product-team/\">this article</a> you can see what I mean by a strong team, and you can compare that to your own team.  If you believe your team could use some help, in this talk I will discuss what you can do to improve the performance of your team and get more from your engineering talent."
		}
	},
	{
		anchor: "MaryPoppendieck",
		name: "Mary Poppendieck",
		photo: "/img/2015/speakers/MaryPoppendieck.png",
		bio: "<p>Mary Poppendieck started her career as a process control programmer, moved on to manage the IT department of a manufacturing plant, and then ended up in product development, where she was both a product champion and department manager.<br><br>Mary considered retirement 1998, but instead found herself managing a government software project where she first encountered the word \"waterfall.\" When Mary compared her experience in successful software and product development to the prevailing opinions about how to manage software projects, she decided the time had come for a new paradigm. She wrote the award-winning book <a href=\"http://www.amazon.com/exec/obidos/ASIN/0321150783/poppendieckco-20\">Lean Software Development: An Agile Toolkit</a> in 2003 to explain how the lean principles from manufacturing offer a better approach to software development.<br><br>Over the past several years, Mary has found retirement elusive as she lectures and teaches classes with her husband Tom. Based on their on-going learning, they wrote a second book, <a href=\"http://www.amazon.com/exec/obidos/ASIN/0321437381/poppendieckco-20\">Implementing Lean Software Development: From Concept to Cash</a> in 2006, a third, <a href=\"http://www.amazon.com/exec/obidos/ASIN/0321620704/poppendieckco-20\">Leading Lean Software Development: Results are Not the Point</a> in 2009, and a fourth book, <a href=\"http://www.amazon.com/The-Lean-Mindset-Right-Questions/dp/0321896904\">The Lean Mindset: Ask the Right Questions</a> in 2013. A popular writer and speaker, Mary continues to bring fresh perspectives to the world of software development.<br><br>Website: <a href=\"http://www.poppendieck.com\">http://www.poppendieck.com</a></p>",
		company: "Poppendieck.LLC",
		link: {
			href: "http://twitter.com/mpoppendieck",
			text: "@mpoppendieck"
		},
		presentation: {
			title: "The New New Software Development Game: Containers, Micro Services and Contract Tests",
			description: "We spent a lot of time over the last decade talking about teams, stories, and WIP. We laid the groundwork for a big change in the way software is developed. Now is the time to change the conversation – from process to technology.  We agree that we must dramatically shorten the feedback loop from idea to outcome – but how?<br><br>It’s time to focus on the tools and techniques that make it possible for small teams to deploy small changes to large systems very rapidly and very safely. Consider architecture:  we are learning how to break monolithic systems into micro services – small, independently deployable components. Look at packaging: we now have standard containers that move freely across environments. Examine reliability: contract tests have proven effective at isolating the impact of component changes.<br><br>In the end the important question is:  How long does it take you to deploy a single line a code, learn something useful, and act on the information?"
		}
	},
	{
		anchor: "MichaelFeathers",
		name: "Michael Feathers",
		photo: "/img/2015/speakers/MichaelFeathers.png",
		bio: "<p>Michael Feathers is the founder and Director of R7K Research & Conveyance, a company specializing in software and organization design. Prior to forming R7K, Michael was the Chief Scientist of Obtiva and a consultant with Object Mentor International. Over the years, Michael has spent a great deal of time helping teams after design over time in code bases. Michael is also the author of the book Working Effectively with Legacy Code (Prentice Hall, 2004).</p>",
		company: "R7K LLC",
		link: {
			href: "http://twitter.com/mfeathers",
			text: "@mfeathers"
		},
		presentation: {
		}
	},
	{
		anchor: "MichaelNygard",
		name: "Michael Nygard",
		photo: "/img/2015/speakers/MichaelNygard.png",
		bio: "<p>Michael Nygard strives to raise the bar and ease the pain for developers around the world. He shares his passion and energy for improvement with everyone he meets, sometimes even with their permission. Living with systems in production taught Michael about the importance of operations and writing production-ready software. Highly-available, highly-scalable commerce systems are his forte. Michael has written and co-authored several books, including \"97 Things Every Software Architect Should Know\" and the best seller \"Release It!\", a book about building software that survives the real world. Michael works for <a href=\"http://www.cognitect.com/\">Cognitect Inc.</a>, the company behind Clojure, ClojureScript, Pedestal, and Datomic.</p>",
		company: "Cognitect Inc.",
		link: {
			href: "http://twitter.com/mtnygard",
			text: "@mtnygard"
		},
		presentation: {
		}
	},
	{
		anchor: "MitchellHashimoto",
		name: "Mitchell Hashimoto",
		photo: "/img/2015/speakers/MitchellHashimoto.png",
		bio: "<p>Mitchell is best known as the creator of Vagrant, Packer, and Consul. Mitchell is the founder of HashiCorp, a company that builds powerful and elegant DevOps tools. He is also an O’Reilly author and professional speaker. He is one of the top GitHub users by followers, activity, and contributions. “Automation obsessed,” Mitchell solves problems with as much computer automation as possible.</p>",
		company: "HashiCorp",
		link: {
			href: "http://twitter.com/mitchellh",
			text: "@mitchellh"
		},
		presentation: {
			title: "Automating the Modern Datacenter, Development to Production",
			description: "Physical, virtual, containers. Public cloud, private cloud, hybrid cloud. IaaS, PaaS, SaaS. These are the choices that we're faced with when architecting a datacenter of today. And the choice is not one or the other; it is often a combination of many of these. How do we remain in control of our datacenters? How do we deploy and configure software, manage change across disparate systems, and enforce policy/security? How do we do this in a way that operations engineers and developers alike can rejoice in the processes and workflow?<br><br>In this talk, I will discuss the problems faced by the modern datacenter, and how a set of open source tools including Vagrant, Packer, Consul, and Terraform can be used to tame the rising complexity curve and provide solutions for these problems."
		}
	},
	{
		anchor: "NancyVanSchooenderwoert",
		name: "Nancy Van Schooenderwoert",
		photo: "/img/2015/speakers/NancyVanSchooenderwoert.png",
		bio: "<p>Nancy Van Schooenderwoert does Agile Enterprise coaching— everything from launching new agile technical teams to advising executives on how to take Agile and Lean principles far beyond software development in their drive to deliver more customer value faster. She works with large and small companies. Nancy pioneered agile practices for embedded software development beginning in 1998. Her background in electronics and software development for avionics, factory automation, medical, and defense systems brings a unique perspective to her coaching practice.<br><br>Nancy holds a Scrum Master certification, has edited a column for the Agile Times, and served on the IEEE 1648 committee to define a standard for customers of agile teams. She has been a regular presenter at various Agile-related conferences since 2003. Her work in applying Agile methods to embedded systems has been referenced by Jim Shore and Mary Poppendieck in their books.</p>",
		company: "Lean-Agile Partners",
		link: {
			href: "http://twitter.com/vanschoo",
			text: "@vanschoo"
		},
		presentation: {
			title: "Agile Engineering in a Safety-Critical World",
			description: "From integrated circuit design to medical device applications, product teams are looking for ways to get the benefits of Agile practices for all the engineering disciplines. Even regulatory bodies like the FDA are recognizing that Agile is a legitimate pathway to safer products, and there is now a Technical Information Report to advise companies on how to satisfy regulatory needs when using Agile practices. This session will give examples of how real teams are applying the Agile principles beyond software, how some of the Agile practices just don’t translate, and what works instead.<br><br>Who is this session for?<ul><li>Software developers who need to work more effectively with other engineers<li>Electronic, Mechanical, and other engineers looking for Agile speed and quality<li>Managers tired of the waste and friction of using Agile for software, and something else for the rest of the development disciplines<li>Technical leaders looking for facts and examples to inspire their teams</ul>"
		}
	},
	{
		anchor: "NehaNarula",
		name: "Neha Narula",
		photo: "/img/2015/speakers/NehaNarula.png",
		bio: "<p>Neha is a fifth year PhD student in PDOS, the Parallel and Distributed Operating Systems group at MIT, advised by Robert Morris. Here she has worked on W5, BFlow, a privacy-preserving browser system, WARP, and Dixie. Neha's research interests are in protecting user data and scalable storage systems for web applications.<br><br>Neha has worked for Google as a Software Engineer on Native Client, Blobstore, a system for efficiently storing and serving terabytes of large binary objects, and Froogle.</p>",
		company: "MIT",
		link: {
			href: "http://twitter.com/neha",
			text: "@neha"
		},
		presentation: {
		}
	},
	{
		anchor: "NilsPuhlmann",
		name: "Nils Puhlmann",
		photo: "/img/2015/speakers/NilsPuhlmann.png",
		bio: "<p>Nils Puhlmann is a recognized industry influencer as former CSO at Zynga, CSO & VP of Risk Management for Qualys, CISO for Eletronic Arts and CISO for Robert Half International. Most recently at Zynga Puhlmann led the converged security department, managing all security risks for the company and chairing the Security Risk Committee. He serves as a member of the international board of directors for ISSA and is also a Co-Founder and member of the Board of the Cloud Security Alliance, a community of over 33,000 security professionals in over 50 chapters worldwide with the goal to promote the use of best practices for providing security assurance within Cloud Computing.</p>",
		company: "Cloud Security Alliance",
		link: {
			href: "http://twitter.com/npuhlmann",
			text: "@npuhlmann"
		},
		presentation: {
		}
	},
	{
		anchor: "PaulButcher",
		name: "Paul Butcher",
		photo: "/img/2015/speakers/PaulButcher.png",
		bio: "<p>Paul is an author and veteran of several technology startups. Most recently, he was Chief Software Architect at SwiftKey, the best-selling input method for Android devices.<br><br>His most recent book is <a href=\"http://pragprog.com/book/pb7con/seven-concurrency-models-in-seven-weeks\">Seven Concurrent Models in Seven Weeks: When Threads Unravel</a> published by The Pragmatic Bookshelf.</p>",
		company: "Ten Tenths Consulting, Pragmatic Programmers",
		link: {
			href: "http://twitter.com/paulrabutcher",
			text: "@paulrabutcher"
		},
		presentation: {
			title: "Concurrency: It's harder (and easier) than you think",
			description: "Your software needs to leverage multiple cores, handle thousands of users and terabytes of data, and continue working in the face of both hardware and software failure. Concurrency and parallelism are the keys to this new world.<br><br>But writing multithreaded code is *hard*. Even harder than most people realise. Do you know how to avoid deadlock? Livelock? Do you know what the memory model says about when it’s safe for one thread to read changes made by another? Or why you shouldn’t call a foreign function while holding a lock? And threads and locks give you no help when it comes to distribution, fault-tolerance or exploiting data parallel architectures.<br><br>The good news is that there are other approaches, including actors, communicating sequential processes and functional programming, that avoid the pitfalls of threads and locks."
		}
	},
	{
		anchor: "PaulStack",
		name: "Paul Stack",
		photo: "/img/2015/speakers/PaulStack.png",
		bio: "<p>Paul Stack is a London based infrastructure engineer working for OpenTable. Paul has spoken at various events throughout the world about his passion for continuous integration and continuous delivery and why they should be part of what developers do on a day to day basis. He believes that reliably delivering software is just as important as its development. Paul’s newest passion is the DevOps movement and how this helps not just development and operations but the entire business and it’s customers.</p>",
		company: "OpenTable",
		link: {
			href: "http://twitter.com/stack72",
			text: "@stack72"
		},
		presentation: {
			title: "How do you scale a logging infrastructure to accept a billion messages a day?",
			description: "Over the past year, OpenTable have been re-architecting their system from a monolithic architecture to move more towards micro-services and small applications. As the infrastructure has changed, so to the logging infrastructure has had to change. Originally we had a logging solution where all logs where based in SQL Server. We then adopted the ELK stack. This allowed us to be able to scale more.<br><br>As the company moved into the cloud, we had to be able to scale even more. We decided that we would move to Apache Kafka.<br><br>This talk is all about the steps we went through and how we approached the work as well as the lessons learned. We are now in a position where we are able to elastically scale our logging infrastructure easily.<br><br>At the end of this talk, Paul will have demonstrated why Apache Kafka is a perfect addition to the ELK stack and how Apache Kafka allows us to add more resiliency and redundancy into our logging infrastructure"
		}
	},
	{
		anchor: "PeterMoskovits",
		name: "Peter Moskovits",
		photo: "/img/2015/speakers/PeterMoskovits.png",
		bio: "<p>Peter is Head of Real-Time Solutions at KAAZING, a software company that pioneered the way organizations can communicate across the Web using the WebSocket standard. Peter works closely with architects and the developer community to build and deploy the best possible web communication solutions. Before joining KAAZING, in various product management leadership roles Peter was responsible for Oracle's portal product strategy. Peter is a frequent speaker at conferences and industry events world wide, including Devoxx, GoTo, YOW!, JavaOne, Oracle OpenWorld, HTML5DeConf DevCon5, AppsWorld, QCon, South by Southwest and various user group meetings. He is the co-author of two books: <a href=\"http://www.amazon.com/Definitive-Guide-HTML5-WebSocket/dp/1430247401\">The Definitive Guide to HTML5 WebSocket</a> and the <a href=\"http://www.amazon.com/Oracle-WebCenter-11g-Handbook-Customizable/dp/0071629327\">Oracle WebCenter 11g Handbook</a>.</p>",
		company: "Kaazing",
		link: {
			href: "http://twitter.com/pmoskovi",
			text: "@pmoskovi"
		},
		presentation: {
			title: "WebSocket for the Real-Time Web and the Internet of Things",
			description: "This session discusses how real-time Web communications technologies can be applied to an always connected Web and mobile environment to provide interactivity and collaboration by controlling physical objects, such as model cars, remotely. You'll learn how you can connect an HTML5 client running on the Web browser of a smartphone and Java running on a Raspberry Pi in real time, using open industry-standard Web technologies. You will learn what it takes to collect telemetry data from airplanes and distribute it to interested parties in a secure and scalable fashion over the Web in real time. The presentation features several live demonstrations, architecture best practices, and code snippets."
		}
	},
	{
		anchor: "RandyShoup",
		name: "Randy Shoup",
		photo: "/img/2015/speakers/RandyShoup.jpg",
		bio: "<p>Randy is a Silicon Valley technology executive with 25 years of experience scaling technology infrastructures and engineering organizations, ranging from tiny startups to Internet-scale companies. Most recently, he served as CTO of KIXEYE, a 500-person maker of real-time strategy games for web and mobile devices. Prior to KIXEYE, he was Director of Engineering in Google's cloud computing group, leading several teams building Google App Engine, the world's largest Platform as a Service. Previously, he was CTO and Co-Founder of Shopilly, an ecommerce startup, and spent 6 1/2 years as Chief Engineer and Distinguished Architect at eBay. He was Chief Architect and Fellow at Tumbleweed Communications, and has held various engineering and architecture roles at Oracle and Informatica. Randy is a frequent keynote speaker and consultant in areas from scalability and cloud computing, to analytics and data science, to engineering culture and DevOps. He is particularly interested in the nexus of people, culture, and technology.</p>",
		company: "Consulting CTO",
		link: {
			href: "http://twitter.com/randyshoup",
			text: "@randyshoup"
		},
		presentation: {
			title: "From the Monolith to Microservices:  Lessons from Google and eBay",
			description: "Most large-scale web companies have evolved their system architecture from a monolithic application and monolithic database to a set of loosely coupled microservices. Using examples from Google, eBay, and other large-scale sites, this talk outlines the pros and cons of these different stages of evolution, and makes practical suggestions about when and how other organizations should consider migrating to microservices. It concludes with some more advanced implications of a microservices architecture, including SLAs, cost-allocation, and vendor-customer relationships within the organization."
		}
	},
	{
		anchor: "RussMiles",
		name: "Russ Miles",
		photo: "/img/2015/speakers/RussMiles.png",
		bio: "<p>Russ Miles is Principal Consultant at <a href=\"http://www.simplicityitself.com/\">Simplicity Itself</a> and works with their clients to continuously and sustainably delivering valuable software.<br><br>Russ' experience covers almost every facet of software delivery having worked across many different domains including Financial Services, Publishing, Defence, Insurance and Search. With over 16 years experience and through consultancy, coaching and training, Russ uses a holistic view of the software delivery process in order to implement multi-faceted continuous improvement programmes touching on everything from developer skills and practices, creating and evolving the best architectures and designs for a given domain, through to advising the management of various companies on how to apply lean and agile thinking and practices to better tune their return on investment from their software development effort.<br><br>Russ is also an international speaker on techniques for achieving the delivery of valuable software as well as a published author, most recently of \"Head First Software Development\" from O'Reilly Media. He is currently working on two new books; \"<a href=\"http://www.amazon.com/Programming-Spring-Russ-Miles/dp/1449302475\">Programming Spring</a>\" for O'Reilly Media that launches the Simplicity Itself technique of \"Test Driven Learning\" for the first time publicly, and another book, working title being \"Field Guide to Continuous Improvement for Software Delivery Team Members\" that captures the different thinking tools and techniques that a professional software developer can apply concretely to their own continuous improvement goals.</p>",
		company: "Simplicity Itself",
		link: {
			href: "http://twitter.com/russmiles",
			text: "@russmiles"
		},
		presentation: {
			title: "Microservices for Speed",
			description: "Speed. It’s all about speed. Of delivery, of innovation, of the competition… In an age of commodity and on-demand cloud infrastructure and platforms the safe haven of being a large incumbent business that relies on technology is shrinking rapidly.<br><br>To compete we need to adapt, and fast. And our software needs to keep up like never before.<br><br>In this talk Russ Miles, Chief Scientist at Simplicity Itself, will take a tour through his experiences facing the challenges of software development in this ‘age of mainstream agility’ and how the microservices architectures and Reactive principles are enabling us to meet these challenges."
		}
	},
	{
		anchor: "SadacheAldrobi",
		name: "Sadache Aldrobi",
		photo: "/img/2015/speakers/SadacheAldrobi.png",
		bio: "<p>CTO at <a href=\"http://zengularity.com/\">Zengularity</a>, a Web Oriented Architecture Company, Sadek is the co-creator and core developer of the Play web framework.</p>",
		company: "Zengularity",
		link: {
			href: "http://twitter.com/Sadache",
			text: "@Sadache"
		},
		presentation: {
		}
	},
	{
		anchor: "SeanCribbs",
		name: "Sean Cribbs",
		photo: "/img/2015/speakers/SeanCribbs.png",
		bio: "<p>Sean Cribbs is a Senior Software Engineer at Basho, where he has contributed to many parts of Riak, but focuses on aspects of user experience, including client interfaces and libraries, convergent datatypes (CRDTs), and tools. In 2011, he grew tired of the Rails/Sinatra/Node echo-chamber and ported Basho's Webmachine HTTP toolkit from Erlang into Ruby. Prior to Basho, Sean was a freelance developer and consultant who also managed the development of the open-source Radiant web publishing system, and erstwhile pianist, composer, music theorist, and conductor.</p>",
		company: "Basho",
		link: {
			href: "http://twitter.com/seancribbs",
			text: "@seancribbs"
		},
		presentation: {
		}
	},
	{
		anchor: "SandroMancuso",
		name: "Sandro Mancuso",
		photo: "/img/2015/speakers/SandroMancuso.png",
		bio: "<p>Software craftsman, co-founder of <a href=\"http://codurance.com/\">Codurance</a>, author of <a href=\"http://www.amazon.co.uk/Software-Craftsman-Professionalism-Pragmatism-Robert/dp/0134052501/ref=sr_1_1?ie=UTF8&qid=1422402542&sr=8-1&keywords=the+software+craftsman\">The Software Craftsman</a>, and founder of the <a href=\"http://londonswcraft.com/\">London Software Craftsmanship Community (LSCC)</a>. Sandro has been coding since a very young age but only started his professional career in 1996. He has worked for startups, software houses, product companies, international consultancy companies, and investment banks.<br><br>During his career Sandro had the opportunity to work in a good variety of projects, with different languages, technologies, and across many different industries. Sandro has a lot of experience in bringing the Software Craftsmanship ideology and Extreme Programming practices to organisations of all sizes. Sandro is internationally renowned by his work on evolving and spreading Software Craftsmanship and is frequently invited to speak in many conferences around the world. His professional aspiration is to raise the bar of the software industry by helping developers become better at and care more about their craft.</p>",
		company: "Codurance",
		link: {
			href: "http://twitter.com/sandromancuso",
			text: "@sandromancuso"
		},
		presentation: {
			title: "Interaction Driven Design",
			description: "How can we quickly tell what an application is about? How can we quickly tell what it does? How can we distinguish business concepts from architecture clutter? How can we quickly find the code we want to change? How can we instinctively know where to add code for new features?<br><br>In this talk Sandro will be sharing how he designed the last application he worked on, twisting a few concepts from Domain-Driven Design, properly applying MVC, borrowing concepts from CQRS, and structuring packages in non-conventional ways. Sandro will also be touching on SOLID principles, Agile incremental design, modularisation, and testing.<br><br>By iteratively modifying the project structure to better model the product requirements, he has come up with a design style that helps developers create maintainable and domain-oriented software."
		}
	},
	{
		anchor: "SimonBrown",
		name: "Simon Brown",
		photo: "/img/2015/speakers/SimonBrown.png",
		bio: "<p>Simon lives in Jersey (the largest of the Channel Islands) and works as an independent consultant, helping teams to build better software. His client list spans over 20 countries and includes organisations ranging from small technology startups through to global household names. Simon is an <a href=\"http://www.codingthearchitecture.com/2013/05/17/saturn_2013.html\">award-winning speaker</a> and the author of <a href=\"http://leanpub.com/software-architecture-for-developers\">Software Architecture for Developers</a> - a developer-friendly guide to software architecture, technical leadership and the balance with agility. He still codes too.</p>",
		company: "Independent Consultant",
		link: {
			href: "http://twitter.com/simonbrown",
			text: "@simonbrown"
		},
		presentation: {
			title: "Software architecture as code",
			description: "Over the past few years, I’ve been distilling software architecture down to its essence, helping organisations adopt a lightweight style of software architecture that complements agile approaches. This includes doing \"just enough\" up front design to understand the significant structural elements of the software, some lightweight sketches to communicate that vision to the team, identifying the highest priority risks and mitigating them with concrete experiments. Software architecture is inherently about technical leadership, stacking the odds of success in your favour and ensuring that everybody is heading in the same direction.<br><br>But it’s 2015 and, with so much technology at our disposal, we’re still manually drawing software architecture diagrams in tools like Microsoft Visio. Furthermore, these diagrams often don’t reflect the implementation in code, and vice versa. This session will look at why this happens and how to resolve the conflict between software architecture and code through the use of architecturally-evident coding styles and the representation of software architecture models as code."
		}
	},
	{
		anchor: "SvenPeters",
		name: "Sven Peters",
		photo: "/img/2015/speakers/SvenPeters.png",
		bio: "<p>Sven Peters is a software geek working as an ambassador for Atlassian in Germany. He has been developing JavaEE applications for over 12 years and leading small teams using lean methodologies. Sven likes well written and readable source code and cares about the motivation of software developers.</p>",
		company: "Atlassian",
		link: {
			href: "http://twitter.com/svenpet",
			text: "@svenpet"
		},
		presentation: {
			title: "Coding Culture",
			description: "Imagine a culture where the input of the whole organization turns an individual idea into a user story in just a couple of hours, where everybody's goal is to make the customer’s job easier and more effective, and where you work on projects you love instead of projects you loathe. A great coding culture concentrates on making developers productive and happy by removing unnecessary overhead, bringing autonomous teams together, helping the individual programmer to innovate, and raising awareness among developers about how to create better code.<br><br>I will talk about how to establish and foster a strong engineering-focused culture that scales from a small team to a huge organization with hundreds of developers. I'll give lots of examples from our experience at Atlassian to show that once you're working in a great coding culture, you won't want to work anywhere else."
		}
	},
	{
		anchor: "StefanieGrewenigJohannesThones",
		coSpeakers: [
			{
				name: "Stefanie Grewenig",
				company: "ThoughtWorks",
				bio: "<p>Stefanie Grewenig is a consultant and software developer at ThoughtWorks Germany. She started working on her first web application in 2009. Stefanie spends most of her free time experimenting with new technologies.</p>"
			},
			{
				name: "Johannes Thönes",
				company: "ThoughtWorks",
				link: {
					href: "http://twitter.com/jthoenes",
					text: "@jthoenes"
				},
				bio: "<p>Johannes Thönes is a software developer and consultant for ThoughtWorks in Hamburg. His experience has primarily been with web development - Java, Ruby, and lately some JavaScript. His background is in medical informatics, which he studied until 2009. Besides the technical details of software, He is also very interested in team dynamics and the 'health' of a team. He considers retrospectives a vital part of improving the team and its daily work. He is lucky and young enough to have no experience in waterfall projects.</p>"
			}
		],
		photo: "/img/2015/speakers/StefanieGrewenigJohannesThones.png",
		presentation: {
			title: "OnConnectionLost: The life of an offline web application",
			description: "Can you use HTML5 technologies to build a web application which works offline? Without a reliable internet connection? Let’s say for two weeks?<br><br>That is what our client asked us to build. Their people will use the application on the road; reading documents, entering results and uploading pictures. And then they come home, connect to the internet and sync their results with their colleagues’.<br><br>AppCache, IndexedDB and File API allow us to store the application and its data in the browser. However, they require us to re-think assumptions we used to make in the web:<ul><li>Is the client or the server the master of the data?<li>How can we handle updates of the application?<li>What data do we need to download beforehand?<li>How do you test offline automatically?<li>And what does offline mean anyway?</ul><br>I want to show you what we discussed and how we answered these questions."
		}
	},
	{
		anchor: "TammerSaleh",
		name: "Tammer Saleh",
		photo: "/img/2015/speakers/TammerSaleh.png",
		bio: "<p>Tammer Saleh is a long time developer, leader, and author of the acclaimed book <a href=\"http://www.amazon.com/Rails-AntiPatterns-Refactoring-Addison-Wesley-Professional/dp/0321604814\">Rails AntiPatterns</a>.<br><br>As founder of Thunderbolt Labs, he helped San Francisco companies build agile teams and ship scalable products. As VP Engineering at Engine Yard, Tammer ran the development team and the flagship Cloud product. Previous lives include C/C++ AI programming, as well as UNIX administration for Citysearch.com and Caltech’s Earthquake Detection Network.<br><br>Tammer is currently building the Cloud Foundry platform at Pivotal. You can read more about him at <a href=\"http://tammersaleh.com\">tammersaleh.com</a>.</p>",
		company: "Pivotal",
		link: {
			href: "http://twitter.com/tsaleh",
			text: "@tsaleh"
		},
		presentation: {
			title: "Microservice AntiPatterns",
			description: "It seems everyone’s talking about microservices, lately, but few appear to have given any real thought to best practices around building and deploying them. In this talk, we’ll highlight many of the mistakes we’ve seen people make when building a microservices architecture.<br><br>We’ll discuss:<ul><li>When microservices are appropriate, and where to draw the lines between services.<li>Dealing with performance issues (data affinity, parallelism, monitoring).<li>Testing and debugging techniques.<li>Managing a polyglot landscape and the explosion of platforms.<li>Managing failure and graceful degradation.</ul><br>If you’re an active programmer, then you’re either building a microservice architecture now, or you’re about to inherit someone else’s. This talk will give you the tools to build yours right, and to quickly identify shortcomings of those you have to work within.",
		}
	},
	{
		anchor: "TrishaGee",
		name: "Trisha Gee",
		photo: "/img/2015/speakers/TrishaGee.png",
		bio: "<p>Trisha has developed Java applications for a range of industries, including finance, manufacturing, technology, open source and non-profit, for companies of all sizes. She has expertise in Java high performance systems, and is passionate about enabling developer productivity. Trisha blogs regularly on subjects that she thinks developers and other humans should care about, she’s a leader of the Sevilla Java User Group, a key member of the London Java Community and a Java Champion - she believes we shouldn't all have to make the same mistakes again and again.</p>",
		company: "JetBrains",
		link: {
			href: "http://twitter.com/trisha_gee",
			text: "@trisha_gee"
		},
		presentation: {
			title: "Java 8 in Anger",
			description: "Java 9 is just around the corner, and yet many of us developers have yet to use Java 8 features in an application. The goal of this presentation is to move beyond slide-sized examples of streams and lambdas, and to show how to build a fully working end-to-end application using just the core libraries available in the latest version of Java.<br><br>In this session, Trisha will build a Java 8 application live. This application will consume a real-time feed of high velocity data, contain services that make sense of the data, and present it in a JavaFX dashboard. Along the way, we’ll encounter Java 8 streams, lambdas, new ways of working with collections, and probably bump into the new date and time API.",
		}
	},
	{
		anchor: "ViktorKlang",
		name: "Viktor Klang",
		photo: "/img/2015/speakers/ViktorKlang.png",
		bio: "<p>Viktor Klang is Chief Architect at Typesafe, former Tech Lead for the Akka project and co-author of scala.concurrent in the Scala Standard Library. Viktor has a long background on the JVM and a passion for concurrent, asynchronous, distributed and resilient systems and the making thereof.<br><br>Hailing from southern Sweden, Viktor is a passionate Scala hacker since 2007, a Java enterprise systems architect since 2003 and a programmer since 1998.<br><br>He's a big fan of agile development, scalable software and elegant code. He's spent the past 7 years building a EIS, ERP, CRM and PDM system for a large international enterprise.<br><br>After being involved in the Lift web framework for 2 years, he joined the Akka team in the middle of 2009 as one of the earliest committers.</p>",
		company: "Typesafe",
		link: {
			href: "http://twitter.com/viktorklang",
			text: "@viktorklang"
		},
		presentation: {
			title: "Distributed: Virtuality and Reality",
			description: "The design and construction of distributed systems for machines and humans are ultimately intertwined.<br><br>In this presentation we'll go through the implications of Reality in Virtuality and the laws of distributed systems and what that means for us as developers—how we need to think in order to build successful systems both for humans and for machines.",
		}
	},
];

module.exports = speakers;
